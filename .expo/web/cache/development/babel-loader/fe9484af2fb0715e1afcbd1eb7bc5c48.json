{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/LastPeriodScreen.js\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport CalendarPicker, { CALENDAR_WEEK_DAYS } from 'react-native-calendar-picker';\nimport { AntDesign } from '@expo/vector-icons';\nimport TopImage from \"../../assets/images/Last_Period/top.png\";\nimport AskLastPeriodImage from \"../../assets/images/Last_Period/AskLastPeriod.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nvar LastPeriodScreen = function LastPeriodScreen() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedDate = _React$useState2[0],\n      setSelectedDate = _React$useState2[1];\n\n  var navigation = useNavigation();\n\n  var saveLastPeriod = function saveLastPeriod() {\n    try {\n      AsyncStorage.setItem('lastPeriod', selectedDate.toISOString());\n    } catch (error) {}\n\n    navigation.navigate('Dashboard');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    }\n  }), React.createElement(Image, {\n    style: styles.topImage,\n    source: TopImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }), React.createElement(View, {\n    style: {\n      padding: 20,\n      alignSelf: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }, React.createElement(Image, {\n    style: styles.lastPeriodText,\n    source: AskLastPeriodImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    }\n  })), React.createElement(View, {\n    style: styles.calenderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  }, React.createElement(CalendarPicker, {\n    onDateChange: function onDateChange(date) {\n      return setSelectedDate(date);\n    },\n    startFromMonday: true,\n    previousTitle: \"\",\n    nextTitle: \"\",\n    headingLevel: 0,\n    weekdays: CALENDAR_WEEK_DAYS,\n    dayOfWeekStyles: styles.dayOfWeekStyles,\n    selectedDayStyle: styles.selectedDate,\n    selectedDayTextColor: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: saveLastPeriod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    }\n  }, React.createElement(View, {\n    style: styles.buttonTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, \"Finish\"), React.createElement(AntDesign, {\n    style: styles.arrowIcon,\n    name: \"arrowright\",\n    size: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }))));\n};\n\nexport default LastPeriodScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  topImage: {\n    alignSelf: 'flex-end'\n  },\n  lastPeriodText: {\n    alignSelf: 'flex-start',\n    marginVertical: 25\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    justifyContent: 'center',\n    color: '#F55963'\n  },\n  calenderContainer: {\n    height: '60%'\n  },\n  buttonTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  arrowIcon: {\n    alignSelf: 'center',\n    color: '#F55963',\n    justifyContent: 'flex-end'\n  },\n  selectedDate: {\n    backgroundColor: '#F55963'\n  },\n  dayOfWeekStyles: {\n    backgroundColor: '#F55963'\n  }\n});","map":{"version":3,"sources":["/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/LastPeriodScreen.js"],"names":["React","CalendarPicker","CALENDAR_WEEK_DAYS","AntDesign","TopImage","AskLastPeriodImage","useNavigation","SafeAreaView","LastPeriodScreen","useState","selectedDate","setSelectedDate","navigation","saveLastPeriod","AsyncStorage","setItem","toISOString","error","navigate","styles","container","topImage","padding","alignSelf","lastPeriodText","calenderContainer","date","dayOfWeekStyles","button","buttonTextContainer","buttonText","arrowIcon","StyleSheet","create","flex","backgroundColor","marginVertical","borderWidth","width","borderRadius","marginTop","borderColor","position","right","top","Dimensions","get","height","flexDirection","fontSize","textAlign","justifyContent","color"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Dimensions,\n  TouchableOpacity,\n  AsyncStorage,\n  StatusBar,\n} from 'react-native';\nimport CalendarPicker, { CALENDAR_WEEK_DAYS } from 'react-native-calendar-picker';\nimport { AntDesign } from '@expo/vector-icons';\nimport TopImage from '../../assets/images/Last_Period/top.png';\nimport AskLastPeriodImage from '../../assets/images/Last_Period/AskLastPeriod.png';\nimport { useNavigation } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nconst LastPeriodScreen = () => {\n  const [selectedDate, setSelectedDate] = React.useState(null);\n  const navigation = useNavigation();\n\n  const saveLastPeriod = () => {\n    try {\n      AsyncStorage.setItem('lastPeriod', selectedDate.toISOString());\n    } catch (error) {\n      // console.log(error);\n    }\n\n    navigation.navigate('Dashboard');\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar hidden />\n      <Image style={styles.topImage} source={TopImage} />\n      <View style={{ padding: 20, alignSelf: 'flex-start' }}>\n        <Image style={styles.lastPeriodText} source={AskLastPeriodImage} />\n      </View>\n\n      <View style={styles.calenderContainer}>\n        <CalendarPicker\n          onDateChange={date => setSelectedDate(date)}\n          startFromMonday={true}\n          previousTitle=\"\"\n          nextTitle=\"\"\n          headingLevel={0}\n          weekdays={CALENDAR_WEEK_DAYS}\n          dayOfWeekStyles={styles.dayOfWeekStyles}\n          selectedDayStyle={styles.selectedDate}\n          selectedDayTextColor=\"#fff\"\n        />\n      </View>\n      <TouchableOpacity style={styles.button} onPress={saveLastPeriod}>\n        <View style={styles.buttonTextContainer}>\n          <Text style={styles.buttonText}>Finish</Text>\n          <AntDesign style={styles.arrowIcon} name=\"arrowright\" size={18} />\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default LastPeriodScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n  },\n  topImage: {\n    alignSelf: 'flex-end',\n  },\n  lastPeriodText: {\n    alignSelf: 'flex-start',\n    marginVertical: 25,\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row',\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    justifyContent: 'center',\n    color: '#F55963',\n  },\n\n  calenderContainer: {\n    height: '60%',\n  },\n  buttonTextContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  arrowIcon: {\n    alignSelf: 'center',\n    color: '#F55963',\n    justifyContent: 'flex-end',\n  },\n  selectedDate: {\n    backgroundColor: '#F55963',\n  },\n  dayOfWeekStyles: {\n    backgroundColor: '#F55963',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}