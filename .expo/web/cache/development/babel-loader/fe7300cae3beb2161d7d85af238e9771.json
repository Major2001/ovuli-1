{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/YourNameScreen.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport top from \"../../../wireframes/assets/Your_Name/top.png\";\nimport How_can_we_call_you from \"../../../wireframes/assets/Your_Name/How_can_we_call_you.png\";\nimport bottom from \"../../../wireframes/assets/Your_Name/bottom.png\";\nimport { AntDesign } from '@expo/vector-icons';\n\nvar YourNameScreen = function (_Component) {\n  _inherits(YourNameScreen, _Component);\n\n  function YourNameScreen(props) {\n    var _this;\n\n    _classCallCheck(this, YourNameScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YourNameScreen).call(this, props));\n\n    _this.saveName = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('Name', _this.state.text));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n              _this.props.navigation.navigate('AverageCycle');\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]]);\n    };\n\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(YourNameScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, React.createElement(Image, {\n        source: top,\n        style: styles.top,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        }\n      }), React.createElement(Image, {\n        source: How_can_we_call_you,\n        style: styles.nameText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }), React.createElement(Image, {\n        source: bottom,\n        style: styles.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputContainer,\n        underlineColorAndroid: \"transparent\",\n        autoCapitalize: \"none\",\n        placeholder: \"Enter your name here\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        value: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.saveName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      }, \"Continue\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        name: \"arrowright\",\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      })));\n    }\n  }]);\n\n  return YourNameScreen;\n}(Component);\n\nexport { YourNameScreen as default };\nvar styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  nameText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 150,\n    marginBottom: 27,\n    marginLeft: 38\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963'\n  },\n  inputContainer: {\n    color: '#f88c70',\n    fontSize: 21,\n    margin: 15,\n    height: 60,\n    borderBottomWidth: 5,\n    borderBottomColor: '#f2f7fd',\n    padding: 15,\n    width: '85%'\n  },\n  buttonContainer: {\n    backgroundColor: '#45CE30',\n    borderRadius: 10,\n    padding: 8,\n    height: 40,\n    alignContent: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    width: '20%',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.5\n  }\n});","map":{"version":3,"sources":["/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/YourNameScreen.js"],"names":["React","Component","top","How_can_we_call_you","bottom","AntDesign","YourNameScreen","props","saveName","AsyncStorage","setItem","state","text","console","log","navigation","navigate","styles","container","nameText","inputContainer","setState","button","buttonText","alignSelf","color","StyleSheet","create","position","right","left","flex","justifyContent","alignItems","backgroundColor","marginTop","Dimensions","get","height","marginBottom","marginLeft","borderWidth","width","borderRadius","borderColor","flexDirection","fontSize","textAlign","padding","paddingLeft","margin","borderBottomWidth","borderBottomColor","buttonContainer","alignContent","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  View,\n  TextInput,\n  AsyncStorage,\n  Image,\n  Dimensions,\n} from 'react-native';\nimport top from '../../../wireframes/assets/Your_Name/top.png';\nimport How_can_we_call_you from '../../../wireframes/assets/Your_Name/How_can_we_call_you.png';\nimport bottom from '../../../wireframes/assets/Your_Name/bottom.png';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport default class YourNameScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: '' };\n  }\n\n  saveName = async () => {\n    // Saving the Name in Asyncstorage\n    try {\n      await AsyncStorage.setItem('Name', this.state.text);\n    } catch (e) {\n      console.log(e);\n    }\n\n    // Navigating to the next screen\n    this.props.navigation.navigate('AverageCycle');\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Image source={top} style={styles.top} />\n        <Image source={How_can_we_call_you} style={styles.nameText} />\n        <Image source={bottom} style={styles.bottom} />\n        <TextInput\n          style={styles.inputContainer}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n          placeholder=\"Enter your name here\"\n          onChangeText={text => this.setState({ text })}\n          value={this.state.text}\n        />\n\n        <TouchableOpacity style={styles.button} onPress={this.saveName}>\n          <Text style={styles.buttonText}>Continue</Text>\n          <AntDesign\n            style={{ alignSelf: 'center', color: '#F55963' }}\n            name=\"arrowright\"\n            size={18}\n          />\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  top: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  nameText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 150,\n    marginBottom: 27,\n    marginLeft: 38,\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row',\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963',\n  },\n  inputContainer: {\n    color: '#f88c70',\n    fontSize: 21,\n    margin: 15,\n    height: 60,\n    borderBottomWidth: 5,\n    borderBottomColor: '#f2f7fd',\n    padding: 15,\n    width: '85%',\n  },\n  buttonContainer: {\n    backgroundColor: '#45CE30',\n    borderRadius: 10,\n    padding: 8,\n    height: 40,\n    alignContent: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000000',\n    width: '20%',\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowRadius: 10,\n    shadowOpacity: 0.5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}