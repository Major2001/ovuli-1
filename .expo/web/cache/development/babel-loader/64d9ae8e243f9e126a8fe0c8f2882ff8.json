{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/LanguageScreen.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { WheelPicker } from 'react-native-wheel-picker-android';\nimport top from \"../../../wireframes/assets/Lang_Screen/top.png\";\nimport bottom from \"../../../wireframes/assets/Lang_Screen/bottom.png\";\nimport please_select_your_language from \"../../../wireframes/assets/Lang_Screen/please_select_your_language.png\";\nvar wheelPickerData = ['Hindi', 'Marathi', 'English', 'Telugu', 'Tulu', 'Tamil'];\n\nvar LanguageScreen = function (_Component) {\n  _inherits(LanguageScreen, _Component);\n\n  function LanguageScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LanguageScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LanguageScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedItem: 0\n    };\n\n    _this.onItemSelected = function (selectedItem) {\n      _this.setState({\n        selectedItem: selectedItem\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LanguageScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          backgroundColor: '#fff',\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: top,\n        style: styles.top,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }), React.createElement(Image, {\n        source: please_select_your_language,\n        style: styles.cycleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }), React.createElement(WheelPicker, {\n        selectedItem: this.state.selectedItem,\n        data: wheelPickerData,\n        onItemSelected: this.onItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }), React.createElement(Image, {\n        source: bottom,\n        style: styles.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.saveselectedItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, \"Continue\"), React.createElement(AntDesign, {\n        style: {\n          alignSelf: 'center',\n          color: '#F55963'\n        },\n        name: \"arrowright\",\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      })));\n    }\n  }]);\n\n  return LanguageScreen;\n}(Component);\n\nexport { LanguageScreen as default };\nvar styles = StyleSheet.create({\n  top: {\n    alignSelf: 'flex-end',\n    height: Dimensions.get('window').height / 7,\n    width: Dimensions.get('window').width / 2\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0\n  },\n  cycleText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 150,\n    marginBottom: 40\n  },\n  cont: {\n    height: 50,\n    width: 250,\n    alignSelf: 'center'\n  },\n  container: {\n    paddingTop: 60,\n    paddingBottom: 30,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963'\n  }\n});","map":{"version":3,"sources":["/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/LanguageScreen.js"],"names":["React","Component","AntDesign","WheelPicker","top","bottom","please_select_your_language","wheelPickerData","LanguageScreen","state","selectedItem","onItemSelected","setState","backgroundColor","flex","styles","cycleText","button","saveselectedItem","buttonText","alignSelf","color","StyleSheet","create","height","Dimensions","get","width","position","left","marginTop","marginBottom","cont","container","paddingTop","paddingBottom","flexDirection","justifyContent","alignItems","borderWidth","borderRadius","borderColor","right","fontSize","textAlign","padding","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, Text, Dimensions, Image, TouchableOpacity } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\nimport { WheelPicker } from 'react-native-wheel-picker-android';\n\nimport top from '../../../wireframes/assets/Lang_Screen/top.png';\nimport bottom from '../../../wireframes/assets/Lang_Screen/bottom.png';\nimport please_select_your_language from '../../../wireframes/assets/Lang_Screen/please_select_your_language.png';\n\nconst wheelPickerData = ['Hindi', 'Marathi', 'English', 'Telugu', 'Tulu', 'Tamil'];\n\nexport default class LanguageScreen extends Component {\n  state = { selectedItem: 0 };\n\n  onItemSelected = selectedItem => {\n    this.setState({ selectedItem });\n  };\n\n  render() {\n    return (\n      <View style={{ backgroundColor: '#fff', flex: 1 }}>\n        <Image source={top} style={styles.top} />\n        <Image source={please_select_your_language} style={styles.cycleText} />\n        <WheelPicker\n          selectedItem={this.state.selectedItem}\n          data={wheelPickerData}\n          onItemSelected={this.onItemSelected}\n        />\n        <Image source={bottom} style={styles.bottom} />\n        <TouchableOpacity style={styles.button} onPress={this.saveselectedItem}>\n          <Text style={styles.buttonText}>Continue</Text>\n          <AntDesign\n            style={{ alignSelf: 'center', color: '#F55963' }}\n            name=\"arrowright\"\n            size={18}\n          />\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  top: {\n    alignSelf: 'flex-end',\n    height: Dimensions.get('window').height / 7,\n    width: Dimensions.get('window').width / 2,\n  },\n  bottom: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n  },\n  cycleText: {\n    alignSelf: 'center',\n    marginTop: Dimensions.get('window').height / 3 - 150,\n    marginBottom: 40,\n  },\n  cont: {\n    height: 50,\n    width: 250,\n    alignSelf: 'center',\n  },\n  container: {\n    paddingTop: 60,\n    paddingBottom: 30,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  button: {\n    borderWidth: 2,\n    width: 120,\n    borderRadius: 5,\n    marginTop: -25,\n    borderColor: '#F55963',\n    position: 'absolute',\n    right: 30,\n    top: Dimensions.get('window').height - 50,\n    flex: 1,\n    flexDirection: 'row',\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    padding: 5,\n    paddingLeft: 10,\n    color: '#F55963',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}