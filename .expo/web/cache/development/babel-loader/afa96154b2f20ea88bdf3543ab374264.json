{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/CalculatingCyclePeriodPage.js\";\nimport 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\n\nvar CalculatingCyclePeriodPage = function (_Component) {\n  _inherits(CalculatingCyclePeriodPage, _Component);\n\n  function CalculatingCyclePeriodPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CalculatingCyclePeriodPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CalculatingCyclePeriodPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      markedDates: {},\n      isStartDatePicked: false,\n      isEndDatePicked: false,\n      duration: '',\n      startDate: ''\n    };\n\n    _this.onDayPress = function (day) {\n      if (_this.state.isStartDatePicked == false) {\n        var markedDates = {};\n        markedDates[day.dateString] = {\n          startingDay: true,\n          color: '#00B0BF',\n          textColor: '#FFFFFF'\n        };\n\n        _this.setState({\n          markedDates: markedDates,\n          isStartDatePicked: true,\n          isEndDatePicked: false,\n          duration: '',\n          startDate: day.dateString\n        });\n      } else {\n        var _markedDates = _this.state.markedDates;\n        var startDate = moment(_this.state.startDate);\n        var endDate = moment(day.dateString);\n        var range = endDate.diff(startDate, 'days');\n        var duration = moment.duration(startDate.diff(endDate)).asDays();\n\n        if (range > 0) {\n          for (var i = 1; i <= range; i++) {\n            var tempDate = startDate.add(1, 'day');\n            tempDate = moment(tempDate).format('YYYY-MM-DD');\n\n            if (i < range) {\n              _markedDates[tempDate] = {\n                color: '#00B0BF',\n                textColor: '#FFFFFF'\n              };\n            } else {\n              _markedDates[tempDate] = {\n                endingDay: true,\n                color: '#00B0BF',\n                textColor: '#FFFFFF'\n              };\n            }\n          }\n\n          _this.setState({\n            markedDates: _markedDates,\n            isStartDatePicked: false,\n            isEndDatePicked: true,\n            duration: '29',\n            startDate: ''\n          });\n        } else {\n          alert('Select an upcomming date!');\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CalculatingCyclePeriodPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(Text, {\n        style: styles.welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, \"On the Calender shown below Please select :\"), React.createElement(Text, {\n        style: styles.welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, \"1. First day of previous menstrual period.\"), React.createElement(Text, {\n        style: styles.welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, \"2. First day of latest menstrual period.\"), React.createElement(Calendar, {\n        maxDate: Date(),\n        monthFormat: \"MMMM yyyy\",\n        markedDates: this.state.markedDates,\n        markingType: \"period\",\n        hideExtraDays: true,\n        hideDayNames: true,\n        onDayPress: this.onDayPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        }\n      }), React.createElement(Text, {\n        style: styles.welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, \"The ovulation cycle is of following Days \"), React.createElement(TextInput, {\n        style: styles.welcome,\n        placeholder: \"00 Days\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            text: text\n          });\n        },\n        value: this.state.duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }), React.createElement(Button, {\n        title: \"next\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('LastPeriod');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }));\n    }\n  }]);\n\n  return CalculatingCyclePeriodPage;\n}(Component);\n\nexport { CalculatingCyclePeriodPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 28,\n    justifyContent: 'center'\n  },\n  welcome: {\n    fontSize: 17,\n    padding: 4,\n    textAlign: 'left'\n  }\n});","map":{"version":3,"sources":["/home/harshit/Desktop/projects/ovuli/src/screens/ProfileScreen/CalculatingCyclePeriodPage.js"],"names":["React","Component","Calendar","moment","CalculatingCyclePeriodPage","state","markedDates","isStartDatePicked","isEndDatePicked","duration","startDate","onDayPress","day","dateString","startingDay","color","textColor","setState","endDate","range","diff","asDays","i","tempDate","add","format","endingDay","alert","styles","container","welcome","Date","text","props","navigation","navigate","StyleSheet","create","flex","padding","justifyContent","fontSize","textAlign"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { Component } from 'react';\nimport { View, StyleSheet, Text, Image, TextInput, Button } from 'react-native';\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\n\nexport default class CalculatingCyclePeriodPage extends Component {\n    state = {\n        markedDates: {},\n        isStartDatePicked: false,\n        isEndDatePicked: false,\n        duration:'',\n        startDate: ''\n    }\n    \n    onDayPress = (day) => {\n        if (this.state.isStartDatePicked == false) {\n            let markedDates = {}\n            markedDates[day.dateString] = { startingDay: true, color: '#00B0BF', textColor: '#FFFFFF' };\n            this.setState({\n                markedDates: markedDates,\n                isStartDatePicked: true,\n                isEndDatePicked: false,\n                duration:'',\n                startDate: day.dateString,\n            });\n        } else {\n            let markedDates = this.state.markedDates\n            let startDate = moment(this.state.startDate);\n            let endDate = moment(day.dateString);\n            let range = endDate.diff(startDate, 'days')\n            let duration = moment.duration(startDate.diff(endDate)).asDays();\n            if (range > 0) {\n                for (let i = 1; i <= range; i++) {\n                    let tempDate = startDate.add(1, 'day');\n                    tempDate = moment(tempDate).format('YYYY-MM-DD')\n                    if (i < range) {\n                        markedDates[tempDate] = { color: '#00B0BF', textColor: '#FFFFFF' };\n                    } else {\n                        markedDates[tempDate] = { endingDay: true, color: '#00B0BF', textColor: '#FFFFFF' };\n                    }\n                }\n                this.setState({\n                    markedDates: markedDates,\n                    isStartDatePicked: false,\n                    isEndDatePicked: true,\n                    duration: '29',\n                    startDate: ''\n                });\n            } else {\n                alert('Select an upcomming date!');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n            <Text style={styles.welcome}>On the Calender shown below Please select :</Text>\n            <Text style={styles.welcome}>1. First day of previous menstrual period.</Text>\n            <Text style={styles.welcome}>2. First day of latest menstrual period.</Text>\n                <Calendar\n                    maxDate={Date()}\n                    monthFormat={\"MMMM yyyy\"}\n                    markedDates={this.state.markedDates}\n                    markingType=\"period\"\n                    hideExtraDays={true}\n                    hideDayNames={true}\n                    onDayPress={this.onDayPress}\n                />\n            <Text style={styles.welcome}>The ovulation cycle is of following Days </Text>\n            <TextInput\n              style={styles.welcome}\n              placeholder=\"00 Days\"\n              onChangeText={text => this.setState({ text })}\n              value={this.state.duration}\n             />\n            <Button title=\"next\" onPress={() => this.props.navigation.navigate('LastPeriod')} />\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 28,\n        justifyContent: 'center',\n    },\n    welcome: {\n      fontSize: 17,\n      padding: 4,\n      textAlign: 'left',\n      \n    },\n});\n"]},"metadata":{},"sourceType":"module"}